{"remainingRequest":"C:\\Coding\\BlockchainEdu-2021\\Vue_class\\test05\\node_modules\\vue-loader\\dist\\index.js??ruleSet[0].use[1]!C:\\Coding\\BlockchainEdu-2021\\Vue_class\\test05\\src\\views\\databindinglist2.vue?vue&type=template&id=7deb6833&scoped=true","dependencies":[{"path":"C:\\Coding\\BlockchainEdu-2021\\Vue_class\\test05\\src\\views\\databindinglist2.vue","mtime":1625458728758},{"path":"C:\\Coding\\BlockchainEdu-2021\\Vue_class\\test05\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Coding\\BlockchainEdu-2021\\Vue_class\\test05\\node_modules\\vue-loader\\dist\\templateLoader.js","mtime":1624994109000},{"path":"C:\\Coding\\BlockchainEdu-2021\\Vue_class\\test05\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Coding\\BlockchainEdu-2021\\Vue_class\\test05\\node_modules\\vue-loader\\dist\\index.js","mtime":1624994108000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgPGRpdj4NCiAgICAgICAgPHNlbGVjdCB2LW1vZGVsPSJzZWxlY3RlZEdlbmRlciI+DQogICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIiPuyghOyytDwvb3B0aW9uPg0KICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0ibWFsZSI+64Ko7J6QPC9vcHRpb24+DQogICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJmZW1hbGUiPuyXrOyekDwvb3B0aW9uPg0KICAgICAgICA8L3NlbGVjdD4NCiAgICAgICAgPGJ1dHRvbiBAY2xpY2s9ImdldFVzZXJMaXN0Ij7sobDtmow8L2J1dHRvbj4NCiAgICAgICAgPHRhYmxlICBjbGFzcz0idXNlclRhYmxlIj4NCiAgICAgICAgICAgIDx0aGVhZD4NCiAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgIDx0ZD7snbTrpoQ8L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQ+64KY7J20PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkPuyEseuzhDwvdGQ+DQogICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgIDwvdGhlYWQ+DQogICAgICAgICAgICA8dGJvZHk+DQogICAgICAgICAgICAgICAgPHRyIDprZXk9InVzZXIuX2lkIiB2LWZvcj0idXNlciBpbiB1c2VyTGlzdCI+DQogICAgICAgICAgICAgICAgICAgIDwhLS0g7ZaJ7J2YIGtleeqwkuqzvCDtlonsnZgg6rCBIOy7rOufvOuTpOydmCDqsJLrk6TsnYQg7KCV7ZW07KO86rOgLCBmb3LrrLjsnYQg64+M66aw64ukLiAtLT4NCiAgICAgICAgICAgICAgICAgICAgPHRkPnt7dXNlci5uYW1lfX08L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQ+e3t1c2VyLmFnZX19PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkPnt7dXNlci5nZW5kZXJ9fTwvdGQ+DQogICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgIDwvdGJvZHk+DQogICAgICAgIDwvdGFibGU+DQogICAgICAgIDwvZGl2Pg0K"},{"version":3,"sources":["C:\\Coding\\BlockchainEdu-2021\\Vue_class\\test05\\src\\views\\databindinglist2.vue"],"names":[],"mappings":"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","file":"C:/Coding/BlockchainEdu-2021/Vue_class/test05/src/views/databindinglist2.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <div>\r\n        <select v-model=\"selectedGender\">\r\n            <option value=\"\">전체</option>\r\n            <option value=\"male\">남자</option>\r\n            <option value=\"female\">여자</option>\r\n        </select>\r\n        <button @click=\"getUserList\">조회</button>\r\n        <table  class=\"userTable\">\r\n            <thead>\r\n                <tr>\r\n                    <td>이름</td>\r\n                    <td>나이</td>\r\n                    <td>성별</td>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr :key=\"user._id\" v-for=\"user in userList\">\r\n                    <!-- 행의 key값과 행의 각 컬럼들의 값들을 정해주고, for문을 돌린다. -->\r\n                    <td>{{user.name}}</td>\r\n                    <td>{{user.age}}</td>\r\n                    <td>{{user.gender}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\n//axios 사용하기\r\n\r\nexport default {\r\n    name: \"\",\r\n    components: {},\r\n    data() {\r\n        return {\r\n            url: \"https://7ea11585-6ca5-4d63-960c-0c79d6d01de2.mock.pstmn.io/getUserList\",\r\n            //나중에 실무에서 서버 개발자가 데이터 url을 알려주고 프론트엔드 개발자는 그 url을 갖다 쓴다.\r\n            userList: [],\r\n        };\r\n    },\r\n    setup() {},\r\n    created() {},\r\n    mounted() {\r\n        // this.getUserList();\r\n    },\r\n    // data()를 읽은 다음에 mounted()가 실행된다.\r\n    unmounted() {},\r\n    methods: {\r\n        async getUserList() {\r\n            var userList = (await axios.get(this.url)).data.data;\r\n            // console.log(this.userList)\r\n            // console.log(this.userList[0].gender)\r\n            if(this.selectedGender == \"\" ) {\r\n                this.userList = userList;\r\n            } else{\r\n                this.userList = userList.filter((u) => u.gender == this.selectedGender);\r\n\r\n                // var newUserList = [];\r\n                // for(var user of userList) {\r\n                //     if(user.gender == this.selectedGender) {\r\n                //         newUserList.push(user);\r\n                //     }\r\n                // }\r\n                // this.userList = newUserList;\r\n            }\r\n        }     \r\n         //여러가지가 담겨있기에 .data를 해줘야 원하는 데이터만 뽑아옴. userList에는 배열안에 data: []가 있어서 다시 한번 data로 접근해줌.\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n\r\n.userTable {\r\n    width: 50%;\r\n    margin: 0 auto;\r\n    align-content: center;\r\n}\r\n\r\ntable,\r\nth,\r\ntd {\r\n    border: 1px solid black;\r\n    border-collapse: collapse;\r\n}\r\n</style>"]}]}