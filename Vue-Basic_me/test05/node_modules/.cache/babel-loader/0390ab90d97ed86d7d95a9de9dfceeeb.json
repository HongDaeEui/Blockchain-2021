{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, createVNode as _createVNode, withDirectives as _withDirectives, openBlock as _openBlock, createBlock as _createBlock, withScopeId as _withScopeId } from \"vue\";\n\nvar _withId = /*#__PURE__*/_withScopeId(\"data-v-6e540752\");\n\nexport var render = /*#__PURE__*/_withId(function (_ctx, _cache) {\n  return _openBlock(), _createBlock(\"div\", {\n    class: [\"container\", {\n      active: _ctx.inActive,\n      'text-red': _ctx.hasError\n    }]\n  }, [_createCommentVNode(\" 기존 클래스에 추가로 바인딩할 클래스를 선언해서 쓸 수 있음, 여기서 true일 경우 active 클래스가 활성화된다. \"), _withDirectives(_createVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return _ctx.txt1 = $event;\n    }),\n    class: {\n      'border-red': _ctx.isEmpty\n    },\n    onBlur: _cache[2] || (_cache[2] = function () {\n      return _ctx.checkEmpty && _ctx.checkEmpty.apply(_ctx, arguments);\n    })\n  }, null, 34\n  /* CLASS, HYDRATE_EVENTS */\n  ), [[_vModelText, _ctx.txt1]])], 2\n  /* CLASS */\n  );\n});","map":{"version":3,"sources":["C:\\Coding\\BlockchainEdu-2021\\Vue_class\\test05\\src\\views\\databindingclass.vue"],"names":[],"mappings":";;;;;uBACI,YAAA,CAGM,KAHN,EAGM;AAHD,IAAA,KAAK,EAAA,CAAC,WAAD,EAAY;AAAA,MAAA,MAAA,EAAwB,IAAA,CAAA,QAAxB;AAAgC,kBAAc,IAAA,CAAA;AAA9C,KAAZ;AAGJ,GAHN,E,CACI,mBAAA,CAAA,sEAAA,C,kBACA,YAAA,CAAsF,OAAtF,EAAsF;AAA/E,IAAA,IAAI,EAAC,MAA0E;;aAA1D,IAAA,CAAA,IAAA,GAAI,M;MAAsD;AAAnD,IAAA,KAAK,EAAA;AAAA,oBAAiB,IAAA,CAAA;AAAjB,KAA8C;AAAlB,IAAA,MAAI,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,IAAA,CAAA,UAAA,IAAA,IAAA,CAAA,UAAA,OAAA,IAAA,YAAF;AAAA,KAAA;AAAc,GAAtF,E,IAAA,E;;AAAA,G,iBAA4B,IAAA,CAAA,I,IAFhC,E;;AAAA,G","sourcesContent":["<template>\r\n    <div class=\"container\" v-bind:class=\"{active: inActive, 'text-red': hasError}\">\r\n        <!-- 기존 클래스에 추가로 바인딩할 클래스를 선언해서 쓸 수 있음, 여기서 true일 경우 active 클래스가 활성화된다. -->\r\n        <input type=\"text\" v-model=\"txt1\" :class=\"{ 'border-red':isEmpty}\" @blur=\"checkEmpty\">\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: \"\",\r\n    components: {},\r\n    data() {\r\n        return {\r\n            inActive: true,\r\n            hasError: false,\r\n            txt1 =\"\",\r\n            isEmpty: false,\r\n        };\r\n    },\r\n    setup() {},\r\n    created() {},\r\n    mounted() {},\r\n    unmounted() {},\r\n    methods: {\r\n        checkEmpty() {\r\n            if(this.txt1 == \"\") {\r\n                this.isEmpty = true;\r\n            } else {\r\n                this.isEmpty = false;\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n/* scoped를 넣었을 때는 작성 파일 안에서만 먹히고, 뺴면은 전체에서 CSS가 먹힌다. */\r\n.container {\r\n    width: 100%;\r\n    height: 200px;\r\n}\r\n.active {\r\n    background-color: yellow;\r\n    font-weight: bold;\r\n}\r\n.text-red{\r\n    color:red;\r\n}\r\n\r\n.border-red {\r\n    border:3px solid red;\r\n}\r\n</style>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}