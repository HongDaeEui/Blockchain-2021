{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\n\nvar _hoisted_1 = /*#__PURE__*/_createVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_2 = /*#__PURE__*/_createVNode(\"label\", null, \"음료자판기 잔돈:\", -1\n/* HOISTED */\n);\n\nvar _hoisted_3 = /*#__PURE__*/_createVNode(\"label\", null, \"투입금액:\", -1\n/* HOISTED */\n);\n\nvar _hoisted_4 = /*#__PURE__*/_createVNode(\"label\", null, \"지갑금액:\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock(\"div\", null, [(_openBlock(true), _createBlock(_Fragment, null, _renderList($data.coins, function (coin) {\n    return _openBlock(), _createBlock(\"button\", {\n      key: coin\n    }, _toDisplayString(coin) + \"원 투입\", 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _hoisted_1, _hoisted_2, _withDirectives(_createVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $data.total_vending_amount = $event;\n    }),\n    readonly: \"\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.total_vending_amount]]), _hoisted_3, _withDirectives(_createVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n      return $data.total_input_amount = $event;\n    }),\n    readonly: \"\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.total_input_amount]]), _hoisted_4, _withDirectives(_createVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n      return $data.total_customer_amount = $event;\n    }),\n    readonly: \"\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.total_customer_amount]]), (_openBlock(true), _createBlock(_Fragment, null, _renderList($data.drinkList, function (drink) {\n    return _openBlock(), _createBlock(\"button\", {\n      class: \"{ active: drink.price <= total_input_amount}\",\n      key: drink.drinkId\n    }, _toDisplayString(drink.drinkName) + \" (\" + _toDisplayString(drink.price) + \"원, 재고수:\" + _toDisplayString(drink.stock) + \") \", 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]);\n}","map":{"version":3,"sources":["C:\\Coding\\BlockchainEdu-2021\\Vue_class\\test05\\src\\views\\vendingmachine.vue"],"names":[],"mappings":";;8BAGQ,YAAA,CAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI,CAAA;AAAA;AAAJ,C;;8BACA,YAAA,CAAwB,OAAxB,EAAwB,IAAxB,EAAO,WAAP,EAAgB,CAAA;AAAA;AAAhB,C;;8BAEA,YAAA,CAAoB,OAApB,EAAoB,IAApB,EAAO,OAAP,EAAY,CAAA;AAAA;AAAZ,C;;8BAEA,YAAA,CAAoB,OAApB,EAAoB,IAApB,EAAO,OAAP,EAAY,CAAA;AAAA;AAAZ,C;;;uBAPJ,YAAA,CAcM,KAdN,EAcM,IAdN,EAcM,E,kBAbF,YAAA,CAA+D,SAA/D,EAA+D,IAA/D,EAA+D,WAAA,CAA5B,KAAA,CAAA,KAA4B,EAAvB,UAAb,IAAa,EAAT;yBAA/B,YAAA,CAA+D,QAA/D,EAA+D;AAAtD,MAAA,GAAG,EAAE;AAAiD,KAA/D,EAAkB,gBAAA,CAA0B,IAA1B,CAAA,GAAgC,MAAlD,EAAsD;AAAA;AAAtD,K;GAA+D,CAA/D,E;;AAAA,GAaE,GAZF,UAYE,EAXF,UAWE,E,gBAVF,YAAA,CAA2D,OAA3D,EAA2D;AAApD,IAAA,IAAI,EAAC,MAA+C;;aAA/B,KAAA,CAAA,oBAAA,GAAoB,M;MAAW;AAAT,IAAA,QAAQ,EAAR;AAAS,GAA3D,E,IAAA,E;;AAAA,G,iBAA4B,KAAA,CAAA,oB,GAU1B,EATF,UASE,E,gBARF,YAAA,CAAyD,OAAzD,EAAyD;AAAlD,IAAA,IAAI,EAAC,MAA6C;;aAA7B,KAAA,CAAA,kBAAA,GAAkB,M;MAAW;AAAT,IAAA,QAAQ,EAAR;AAAS,GAAzD,E,IAAA,E;;AAAA,G,iBAA4B,KAAA,CAAA,kB,GAQ1B,EAPF,UAOE,E,gBANF,YAAA,CAA4D,OAA5D,EAA4D;AAArD,IAAA,IAAI,EAAC,MAAgD;;aAAhC,KAAA,CAAA,qBAAA,GAAqB,M;MAAW;AAAT,IAAA,QAAQ,EAAR;AAAS,GAA5D,E,IAAA,E;;AAAA,G,iBAA4B,KAAA,CAAA,qB,GAM1B,G,kBALF,YAAA,CAES,SAFT,EAES,IAFT,EAES,WAAA,CAFyF,KAAA,CAAA,SAEzF,EAFkG,UAAlB,KAAkB,EAAb;yBAA9F,YAAA,CAES,QAFT,EAES;AAFD,MAAA,KAAK,EAAC,8CAEL;AAFqD,MAAA,GAAG,EAAE,KAAK,CAAC;AAEhE,KAFT,E,iBACM,KAAK,CAAC,S,IAAW,I,GAAE,gBAAA,CAAE,KAAK,CAAC,KAAR,C,GAAe,S,GAAO,gBAAA,CAAE,KAAK,CAAC,KAAR,C,GAAe,IAD9D,EAEA;AAAA;AAFA,K;GAES,CAFT,E;;AAAA,GAKE,EAdN,C","sourcesContent":["<template>\r\n    <div>\r\n        <button :key=\"coin\" v-for=\"coin in coins\">{{coin}}원 투입</button>\r\n        <br>\r\n        <label>음료자판기 잔돈:</label>\r\n        <input type=\"text\" v-model=\"total_vending_amount\" readonly>\r\n        <label>투입금액:</label>\r\n        <input type=\"text\" v-model=\"total_input_amount\" readonly>\r\n        <label>지갑금액:</label>\r\n        <input type=\"text\" v-model=\"total_customer_amount\" readonly>\r\n        <button class=\"{ active: drink.price <= total_input_amount}\" :key=\"drink.drinkId\" v-for=\"drink of drinkList\">\r\n            {{drink.drinkName}} ({{drink.price}}원, 재고수:{{drink.stock}})\r\n        </button>\r\n        \r\n\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: \"\",\r\n    components: {},\r\n    data() {\r\n        return {\r\n            total_input_amount: 0,\r\n            total_customer_amount: 1000,\r\n            total_vending_amount: 10000,\r\n            coins: [100, 500, 1000],\r\n            drinkList: [{\r\n                drinkId: \"1\",\r\n                drinkName: \"코카콜라\",\r\n                price: 700,\r\n                stock: 5\r\n            },\r\n            {\r\n                drinkId: \"2\",\r\n                drinkName: \"오렌지주스\",\r\n                price: 1200,\r\n                stock: 5\r\n            },\r\n            {\r\n                drinkId: \"3\",\r\n                drinkName: \"커피\",\r\n                price: 500,\r\n                stock: 5\r\n            },\r\n            {\r\n                drinkId: \"4\",\r\n                drinkName: \"물\",\r\n                price: 700,\r\n                stock: 5\r\n            },\r\n            {\r\n                drinkId: \"5\",\r\n                drinkName: \"보리차\",\r\n                price: 1200,\r\n                stock: 5\r\n            },\r\n            {\r\n                drinkId: \"6\",\r\n                drinkName: \"포카리\",\r\n                price: 1000,\r\n                stock: 5\r\n            },\r\n            {\r\n                drinkId: \"7\",\r\n                drinkName: \"뽀로로\",\r\n                price: 1300,\r\n                stock: 5\r\n            }\r\n        ],\r\n        };\r\n    },\r\n    setup() {},\r\n    created() {},\r\n    mounted() {},\r\n    unmounted() {},\r\n    methods: {\r\n        inputAmount(amount) {\r\n            // var output = document.getElementById(\"output\");\r\n            if (amount <= total_customer_amount) {\r\n                this.total_input_amount += amount;\r\n                this.total_customer_amount -= amount;\r\n                this.total_vending_amount += amount;\r\n\r\n                for (var drink of drinkList) {\r\n                    if (drink.price <= total_input_amount) {\r\n                        document.getElementById(\"btnDrink\" + drink.drinkId).style.backgroundColor = \"yellow\";\r\n                    }\r\n                }\r\n\r\n                // document.getElementById(\"total_input_amount\").value = total_input_amount;\r\n                // document.getElementById(\"total_customer_amount\").value = total_customer_amount;\r\n                // document.getElementById(\"total_vending_amount\").value = total_vending_amount;\r\n\r\n                // output.insertAdjacentHTML(\"beforeend\", `<p>${amount}이 투입되었습니다.</p>`);\r\n                // output.insertAdjacentHTML(\"beforeend\", `<p>총 투입 금액은 ${total_input_amount}입니다.</p>`);\r\n                // output.insertAdjacentHTML(\"beforeend\", `<p>당신의 지갑에는 ${total_customer_amount}이 남아 있습니다.</p>`);\r\n            } else {\r\n                // output.insertAdjacentHTML(\"beforeend\", `<p>내 지갑에 남아 있는 돈이 ${total_customer_amount} 입니다.</p>`);\r\n                // output.insertAdjacentHTML(\"beforeend\", `<p>${amount}를 투입할 수 없습니다.</p>`);\r\n            }\r\n            // output.scrollTop = output.scrollHeight;\r\n\r\n        }\r\n    }\r\n}\r\n</script>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}