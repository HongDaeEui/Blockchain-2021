{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock, createVNode as _createVNode, vShow as _vShow, withDirectives as _withDirectives } from \"vue\";\nvar _hoisted_1 = {\n  key: 0\n};\n\nvar _hoisted_2 = /*#__PURE__*/_createVNode(\"button\", null, \"조회\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock(\"div\", null, [_createCommentVNode(\"       <h1 v-if=\\\"type=='A'\\\">A</h1>\\r\\n        <h1 v-else-if=\\\"type=='B'\\\">B</h1>\\r\\n        <h1 v-else>C</h1> \"), $data.userRole == 'Admin' ? (_openBlock(), _createBlock(\"button\", _hoisted_1, \"생성\")) : _createCommentVNode(\"v-if\", true), _hoisted_2, _createCommentVNode(\" 실무에서는 이런식으로 접속자 주체별 구현기능 다르게 할 때 씀 \"), _withDirectives(_createVNode(\"button\", null, \"삭제\", 512\n  /* NEED_PATCH */\n  ), [[_vShow, $data.userRole == 'Admin']]), _createCommentVNode(\" show도 if랑 비슷하나 큰 차이가 있다. show는 만들어져는 있는데 style로 안보이게 해놓은 것, if는 요소 자체가 만들어지지 않음. \"), _createCommentVNode(\" 돔트리를 건드리지 않고, 가렸다 보였다하는 것이기 때문에 빈번하게 하는 요소의 경우 비용이 훨씬 적게 든다. \"), _createCommentVNode(\" v-show는 조건을 == (참), != (거짓)으로 잡아서 if - else 구문처럼 사용한다. \")]);\n}","map":{"version":3,"sources":["C:\\Coding\\BlockchainEdu-2021\\Vue_class\\test05\\src\\views\\renderingif.vue"],"names":[],"mappings":";;;;;8BAMQ,YAAA,CAAmB,QAAnB,EAAmB,IAAnB,EAAQ,IAAR,EAAU,CAAA;AAAA;AAAV,C;;;uBALJ,YAAA,CAWM,KAXN,EAWM,IAXN,EAWM,CAVR,mBAAA,CAAA,kHAAA,CAUQ,EAPY,KAAA,CAAA,QAAA,IAAQ,O,kBAAtB,YAAA,CAA4C,QAA5C,EAA4C,UAA5C,EAAiC,IAAjC,C,qCAOE,EANF,UAME,EALD,mBAAA,CAAA,sCAAA,CAKC,E,gBAJF,YAAA,CAA8C,QAA9C,EAA8C,IAA9C,EAAmC,IAAnC,EAAqC;AAAA;AAArC,G,EAAqC,C,SAArB,KAAA,CAAA,QAAA,IAAQ,O,CAAa,C,CAInC,EAHF,mBAAA,CAAA,oFAAA,CAGE,EAFF,mBAAA,CAAA,gEAAA,CAEE,EADF,mBAAA,CAAA,0DAAA,CACE,CAXN,C","sourcesContent":["<template>\r\n    <div>\r\n  <!--       <h1 v-if=\"type=='A'\">A</h1>\r\n        <h1 v-else-if=\"type=='B'\">B</h1>\r\n        <h1 v-else>C</h1> -->\r\n        <button v-if=\"userRole=='Admin'\">생성</button>\r\n        <button>조회</button>\r\n         <!-- 실무에서는 이런식으로 접속자 주체별 구현기능 다르게 할 때 씀 -->\r\n        <button v-show=\"userRole=='Admin'\">삭제</button>\r\n        <!-- show도 if랑 비슷하나 큰 차이가 있다. show는 만들어져는 있는데 style로 안보이게 해놓은 것, if는 요소 자체가 만들어지지 않음. -->\r\n        <!-- 돔트리를 건드리지 않고, 가렸다 보였다하는 것이기 때문에 빈번하게 하는 요소의 경우 비용이 훨씬 적게 든다. --> \r\n        <!-- v-show는 조건을 == (참), != (거짓)으로 잡아서 if - else 구문처럼 사용한다. -->\r\n    </div> \r\n</template>\r\n<script>\r\nexport default {\r\n    name: \"\",\r\n    components: {},\r\n    data() {\r\n        return {\r\n            type: \"B\",\r\n            userRole: \"User\",\r\n\r\n        };\r\n    },\r\n    setup() {},\r\n    created() {},\r\n    mounted() {},\r\n    unmounted() {},\r\n    methods: {}\r\n}\r\n</script>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}