{"ast":null,"code":"import _asyncToGenerator from \"C:/Coding/BlockchainEdu-2021/Vue_class/test05/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"regenerator-runtime/runtime.js\";\nimport axios from 'axios'; //axios 사용하기\n\nexport default {\n  name: \"\",\n  components: {},\n  data: function data() {\n    return {\n      url: \"https://7ea11585-6ca5-4d63-960c-0c79d6d01de2.mock.pstmn.io/getUserList\",\n      userList: []\n    };\n  },\n  setup: function setup() {},\n  created: function created() {},\n  mounted: function mounted() {// this.getUserList();\n  },\n  // data()를 읽은 다음에 mounted()가 실행된다.\n  unmounted: function unmounted() {},\n  methods: {\n    getUserList: function getUserList() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(_this.url);\n\n              case 2:\n                _this.userList = _context.sent.data.data;\n                console.log(_this.userList);\n                console.log(_this.userList[0].gender);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    } //여러가지가 담겨있기에 .data를 해줘야 원하는 데이터만 뽑아옴. userList에는 배열안에 data: []가 있어서 다시 한번 data로 접근해줌.\n\n  }\n};","map":{"version":3,"sources":["C:\\Coding\\BlockchainEdu-2021\\Vue_class\\test05\\src\\views\\databindinglist2.vue"],"names":[],"mappings":";;AAuBA,OAAO,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,eAAe;AACX,EAAA,IAAI,EAAE,EADK;AAEX,EAAA,UAAU,EAAE,EAFD;AAGX,EAAA,IAHW,kBAGJ;AACH,WAAO;AACH,MAAA,GAAG,EAAE,wEADF;AAEH,MAAA,QAAQ,EAAE;AAFP,KAAP;AAIH,GARU;AASX,EAAA,KATW,mBASH,CAAE,CATC;AAUX,EAAA,OAVW,qBAUD,CAAE,CAVD;AAWX,EAAA,OAXW,qBAWD,CACN;AACH,GAbU;AAcX;AACA,EAAA,SAfW,uBAeC,CAAE,CAfH;AAgBX,EAAA,OAAO,EAAE;AACC,IAAA,WADD,yBACe;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACO,KAAK,CAAC,GAAN,CAAU,KAAI,CAAC,GAAf,CADP;;AAAA;AAChB,gBAAA,KAAI,CAAC,QADW,iBAC4B,IAD5B,CACiC,IADjC;AAEhB,gBAAA,OAAO,CAAC,GAAR,CAAY,KAAI,CAAC,QAAjB;AACA,gBAAA,OAAO,CAAC,GAAR,CAAY,KAAI,CAAC,QAAL,CAAc,CAAd,EAAiB,MAA7B;;AAHgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIpB,KALK,CAMJ;;AANI;AAhBE,CAAf","sourcesContent":["<template>\r\n    <div>\r\n        <button @click=\"getUserList\">조회</button>\r\n        <table  class=\"userTable\">\r\n            <thead>\r\n                <tr>\r\n                    <td>이름</td>\r\n                    <td>나이</td>\r\n                    <td>성별</td>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr :key=\"user._id\" v-for=\"user in userList\">\r\n                    <!-- 행의 key값과 행의 각 컬럼들의 값들을 정해주고, for문을 돌린다. -->\r\n                    <td>{{user.name}}</td>\r\n                    <td>{{user.age}}</td>\r\n                    <td>{{user.gender}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\n//axios 사용하기\r\n\r\nexport default {\r\n    name: \"\",\r\n    components: {},\r\n    data() {\r\n        return {\r\n            url: \"https://7ea11585-6ca5-4d63-960c-0c79d6d01de2.mock.pstmn.io/getUserList\",\r\n            userList: [],\r\n        };\r\n    },\r\n    setup() {},\r\n    created() {},\r\n    mounted() {\r\n        // this.getUserList();\r\n    },\r\n    // data()를 읽은 다음에 mounted()가 실행된다.\r\n    unmounted() {},\r\n    methods: {\r\n        async getUserList() {\r\n            this.userList = (await axios.get(this.url)).data.data;\r\n            console.log(this.userList)\r\n            console.log(this.userList[0].gender)\r\n        }     \r\n         //여러가지가 담겨있기에 .data를 해줘야 원하는 데이터만 뽑아옴. userList에는 배열안에 data: []가 있어서 다시 한번 data로 접근해줌.\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n\r\n.userTable {\r\n    width: 50%;\r\n    margin: 0 auto;\r\n    align-content: center;\r\n}\r\n\r\ntable,\r\nth,\r\ntd {\r\n    border: 1px solid black;\r\n    border-collapse: collapse;\r\n}\r\n</style>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}